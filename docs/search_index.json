[
["index.html", "Analysis Templates in R Overview", " Analysis Templates in R Lisa DeBruine 2019-02-14 Overview This book will provide templates for conducting and reporting common analyses in R, including examples of R Markdown for reporudicible and typo-free reporting. "],
["power.html", "Chapter 1 Power Analyses 1.1 Using the pwr package", " Chapter 1 Power Analyses 1.1 Using the pwr package library(pwr) 1.1.1 T-tests Use pwr.t.test() to calculate sample size, power, or effect size for the given parameters. t_pwr &lt;- pwr.t.test( n = NULL, d = 0.2, sig.level = 0.025, # defaults to 0.05 power = .9, type = &quot;paired&quot;, # c(&quot;two.sample&quot;, &quot;one.sample&quot;, &quot;paired&quot;) alternative = &quot;greater&quot; # c(&quot;two.sided&quot;, &quot;less&quot;, &quot;greater&quot;) ) The output looks like this: ## ## Paired t test power calculation ## ## n = 264.6138 ## d = 0.2 ## sig.level = 0.025 ## power = 0.9 ## alternative = greater ## ## NOTE: n is number of *pairs* The variable that we created called t_pwr is a list of items that you can access with the following code: variable value t_pwr$n 264.6137766 t_pwr$d 0.2 t_pwr$sig.level 0.025 t_pwr$power 0.9 t_pwr$alternative greater t_pwr$method Paired t test power calculation These numbers need a little formatting before we can use them in text. You can write up this power analysis using the following code. ```{r, include=FALSE} n &lt;- ceiling(t_pwr$n) power &lt;- round(t_pwr$power*100, 0) d &lt;- formatC(t_pwr$d, format = &quot;f&quot;, digits = 2) alpha &lt;- formatC(t_pwr$sig.level, format = &quot;f&quot;, digits = 3) sided &lt;- ifelse(t_pwr$alternative == &quot;two.sample&quot;, 2, 1) method &lt;- t_pwr$method %&gt;% gsub(&quot; power calculation&quot;, &quot;&quot;, .) %&gt;% gsub(&quot;t test&quot;, &quot;t-test&quot;, .) %&gt;% str_to_lower() ``` A power analysis using the R package &#96;pwr&#96; [\\@R-pwr] indicated that &#96;r n&#96; participants would be required to have &#96;r power&#96;% power to detect an effect with Cohen's d at least as large as &#96;r d&#96; with an alpha of &#96;r alpha&#96; using a &#96;r sided&#96;-sided &#96;r method&#96;. Which gives the following output: A power analysis using the R package pwr (Champely 2018) indicated that 265 participants would be required to have 90% power to detect an effect with Cohen's d at least as large as 0.20 with an alpha of 0.025 using a 1-sided paired t-test. The function formatC is like round(), but makes it easier to keep trailing zeros. 1.1.2 General t-power function We can write a function that does all this. pwr_t_test_output &lt;- function(t_pwr) { n &lt;- ceiling(t_pwr$n) power &lt;- round(t_pwr$power*100, 0) d &lt;- formatC(t_pwr$d, format = &quot;f&quot;, digits = 2) alpha &lt;- formatC(t_pwr$sig.level, format = &quot;f&quot;, digits = 3) sided &lt;- ifelse(t_pwr$alternative == &quot;two.sample&quot;, 2, 1) method &lt;- t_pwr$method %&gt;% gsub(&quot; power calculation&quot;, &quot;&quot;, .) %&gt;% gsub(&quot;t test&quot;, &quot;t-test&quot;, .) %&gt;% str_to_lower() paste0(&quot;A power analysis using the R package `pwr` [@R-pwr] indicated that &quot;, n, &quot; participants would be required to have &quot;, power, &quot;% power to detect an effect with Cohen&#39;s d at least as large as &quot;, d, &quot; with an alpha of &quot;, alpha, &quot; using a &quot;, sided, &quot;-sided &quot;, method, &quot;.&quot;) } Now you can just include this function at the top of your document and get a power analysis sentence using pwr_t_test_output(t_pwr). Make sure to set your r chunk to include = FALSE if you don't want to show the code chunk. t_pwr &lt;- pwr.t.test( n = 100, d = NULL, sig.level = 0.05, power = .8, type = &quot;two.sample&quot;, alternative = &quot;two.sided&quot; ) A power analysis using the R package pwr (Champely 2018) indicated that 100 participants would be required to have 80% power to detect an effect with Cohen's d at least as large as 0.40 with an alpha of 0.050 using a 1-sided two-sample t-test. "]
]
